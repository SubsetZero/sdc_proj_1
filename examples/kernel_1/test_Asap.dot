digraph "" {
	graph [bb="0,0,836.11,845"];
	node [label="\N"];
	subgraph "cluster_if.then" {
		graph [bb="58.114,363,330.11,510",
			color=darkgreen,
			label="if.then",
			lheight=0.21,
			lp="194.11,498.5",
			lwidth=0.64
		];
		_shr3	[bbID="if.then",
			bitwidth=32,
			height=0.5,
			id=1,
			instruction="%shr3 = ashr i32 %shr, %n",
			label="ashr _shr3",
			pos="262.11,461",
			type=ashr,
			width=1.661];
		_mul4	[bbID="if.then",
			bitwidth=32,
			height=0.5,
			id=1,
			instruction="%mul4 = mul nsw i32 %shr3, %b",
			label="mul _mul4",
			pos="125.11,389",
			type=mul,
			width=1.6429];
		_shr3 -> _mul4	[pos="e,154.13,404.82 233.06,445.15 212.72,434.76 185.33,420.77 163.24,409.48"];
		_shr6	[bbID="if.then",
			bitwidth=32,
			height=0.5,
			id=1,
			instruction="%shr6 = ashr i32 %shr3, %c",
			label="ashr _shr6",
			pos="262.11,389",
			type=ashr,
			width=1.661];
		_shr3 -> _shr6	[pos="e,262.11,407.1 262.11,442.7 262.11,434.98 262.11,425.71 262.11,417.11"];
	}
	subgraph "cluster_if.end" {
		graph [bb="166.11,64,480.11,355",
			color=darkgreen,
			label="if.end",
			lheight=0.21,
			lp="323.11,343.5",
			lwidth=0.56
		];
		"_c.addr.0"	[bbID="if.end",
			bitwidth=32,
			height=0.5,
			id=2,
			instruction="%c.addr.0 = phi i32 [ %shr6, %if.then ], [ %c, %entry ]",
			label="phi _c.addr.0",
			pos="402.11,306",
			type=phi,
			width=1.9318];
		_shr8	[bbID="if.end",
			bitwidth=32,
			height=0.5,
			id=2,
			instruction="%shr8 = ashr i32 %n, %c.addr.0",
			label="ashr _shr8",
			pos="368.11,234",
			type=ashr,
			width=1.661];
		"_c.addr.0" -> _shr8	[pos="e,376.5,252.28 393.88,288.05 390.02,280.09 385.31,270.41 380.99,261.51"];
		_mul9	[bbID="if.end",
			bitwidth=32,
			height=0.5,
			id=2,
			instruction="%mul9 = mul nsw i32 %add7, %shr8",
			label="mul _mul9",
			pos="300.11,162",
			type=mul,
			width=1.6429];
		_shr8 -> _mul9	[pos="e,316.11,179.47 352,216.41 343.45,207.61 332.78,196.63 323.35,186.92"];
		"ret_if.end"	[bbID="if.end",
			bitwidth=0,
			height=0.5,
			id=2,
			instruction="ret i32 %mul9",
			label="ret_if.end",
			pos="300.11,90",
			type=ret,
			width=1.5165];
		_mul9 -> "ret_if.end"	[pos="e,300.11,108.1 300.11,143.7 300.11,135.98 300.11,126.71 300.11,118.11"];
		"_a.addr.0"	[bbID="if.end",
			bitwidth=32,
			height=0.5,
			id=2,
			instruction="%a.addr.0 = phi i32 [ %mul4, %if.then ], [ %shr, %entry ]",
			label="phi _a.addr.0",
			pos="244.11,306",
			type=phi,
			width=1.9498];
		_add7	[bbID="if.end",
			bitwidth=32,
			height=0.5,
			id=2,
			instruction="%add7 = add nsw i32 %a.addr.0, %b",
			label="add _add7",
			pos="232.11,234",
			type=add,
			width=1.6068];
		"_a.addr.0" -> _add7	[pos="e,235.05,252.1 241.15,287.7 239.83,279.98 238.24,270.71 236.76,262.11"];
		_add7 -> _mul9	[pos="e,284.11,179.47 248.23,216.41 256.78,207.61 267.45,196.63 276.88,186.92"];
	}
	subgraph cluster_entry {
		graph [bb="488.11,208,828.11,801",
			color=darkgreen,
			label=entry,
			lheight=0.21,
			lp="658.11,789.5",
			lwidth=0.54
		];
		_add	[bbID=entry,
			bitwidth=32,
			height=0.5,
			id=0,
			instruction="%add = add nsw i32 %b, %a",
			label="add _add",
			pos="549.11,680",
			type=add,
			width=1.4443];
		_mul	[bbID=entry,
			bitwidth=32,
			height=0.5,
			id=0,
			instruction="%mul = mul nsw i32 %add, %n",
			label="mul _mul",
			pos="549.11,608",
			type=mul,
			width=1.4804];
		_add -> _mul	[pos="e,549.11,626.1 549.11,661.7 549.11,653.98 549.11,644.71 549.11,636.11"];
		_shr	[bbID=entry,
			bitwidth=32,
			height=0.5,
			id=0,
			instruction="%shr = ashr i32 %mul, %c",
			label="ashr _shr",
			pos="550.11,536",
			type=ashr,
			width=1.4985];
		_mul -> _shr	[pos="e,549.87,554.1 549.36,589.7 549.47,581.98 549.6,572.71 549.73,564.11"];
		_mul1	[bbID=entry,
			bitwidth=32,
			height=0.5,
			id=0,
			instruction="%mul1 = mul nsw i32 %shr, %c",
			label="mul _mul1",
			pos="621.11,461",
			type=mul,
			width=1.6429];
		_shr -> _mul1	[pos="e,605.07,478.5 566.22,518.44 575.57,508.82 587.51,496.55 597.87,485.9"];
		_b	[bbID=entry,
			height=0.5,
			id=0,
			pos="608.11,752",
			type=argument,
			width=0.75];
		_b -> _add	[pos="e,563.13,697.63 595.31,735.81 587.82,726.93 578.2,715.5 569.67,705.39"];
		_sub	[bbID=entry,
			bitwidth=32,
			height=0.5,
			id=0,
			instruction="%sub = sub nsw i32 %mul1, %b",
			label="sub _sub",
			pos="736.11,389",
			type=sub,
			width=1.4263];
		_b -> _sub	[pos="e,765.81,403.91 633.99,746.27 690.33,734.31 819.11,697.31 819.11,609 819.11,609 819.11,609 819.11,535 819.11,493.87 829.75,478.58 \
809.11,443 800.99,429 787.53,417.66 774.36,409.12"];
		_mul2	[bbID=entry,
			bitwidth=32,
			height=0.5,
			id=0,
			instruction="%mul2 = mul nsw i32 %c, %b",
			label="mul _mul2",
			pos="721.11,536",
			type=mul,
			width=1.6429];
		_b -> _mul2	[pos="e,720.79,554.06 629.53,741.01 646.35,732.07 669.03,717.39 682.11,698 709.83,656.91 717.91,598.17 720.22,564.18"];
		_cmp	[bbID=entry,
			bitwidth=1,
			height=0.5,
			id=0,
			instruction="%cmp = icmp slt i32 %sub, %rem",
			label="icmp_slt _cmp",
			pos="671.11,306",
			type=icmp,
			width=2.1123];
		_sub -> _cmp	[pos="e,684.56,323.76 722.65,371.22 713.49,359.81 701.24,344.54 690.97,331.74"];
		_div	[bbID=entry,
			bitwidth=32,
			height=0.5,
			id=0,
			instruction="%div = sdiv i32 %n, %mul2",
			label="sdiv _div",
			pos="749.11,461",
			type=sdiv,
			width=1.4263];
		_mul2 -> _div	[pos="e,742.56,479.09 727.61,518.07 730.98,509.29 735.17,498.36 738.95,488.49"];
		br_entry	[bbID=entry,
			bitwidth=0,
			height=0.5,
			id=0,
			instruction="br i1 %cmp, label %if.end, label %if.then",
			label=br_entry,
			pos="671.11,234",
			type=br,
			width=1.3902];
		_cmp -> br_entry	[pos="e,671.11,252.1 671.11,287.7 671.11,279.98 671.11,270.71 671.11,262.11"];
		_rem	[bbID=entry,
			bitwidth=32,
			height=0.5,
			id=0,
			instruction="%rem = srem i32 %div, %c",
			label="srem _rem",
			pos="607.11,389",
			type=srem,
			width=1.661];
		_div -> _rem	[pos="e,636.93,404.7 720.72,446 699.28,435.44 669.63,420.82 645.99,409.16"];
		_a	[bbID=entry,
			height=0.5,
			id=0,
			pos="536.11,752",
			type=argument,
			width=0.75];
		_a -> _add	[pos="e,545.91,698.28 539.26,734.05 540.69,726.35 542.42,717.03 544.03,708.36"];
		_mul1 -> _sub	[pos="e,711.72,404.85 646.35,444.64 662.9,434.56 684.73,421.28 702.72,410.33"];
		_n	[bbID=entry,
			height=0.5,
			id=0,
			pos="646.11,680",
			type=argument,
			width=0.75];
		_n -> _mul	[pos="e,570.87,624.7 628.32,666.16 614.66,656.3 595.48,642.46 579.42,630.87"];
		_n -> _div	[pos="e,764.9,478.36 666.92,668.45 700.1,650.31 763.82,609.69 789.11,554 799.48,531.17 785.54,504.93 771.35,486.33"];
		_rem -> _cmp	[pos="e,657.87,323.76 620.37,371.22 629.39,359.81 641.46,344.54 651.56,331.74"];
		_c	[bbID=entry,
			height=0.5,
			id=0,
			pos="647.11,608",
			type=argument,
			width=0.75];
		_c -> _shr	[pos="e,571.87,552.7 629.32,594.16 615.66,584.3 596.48,570.46 580.42,558.87"];
		_c -> _mul2	[pos="e,703.83,553.35 662.09,592.83 671.9,583.55 684.97,571.19 696.31,560.46"];
		_c -> _mul1	[pos="e,624.21,479.26 644.08,590.08 639.64,565.33 631.33,518.98 626.02,489.35"];
		_c -> _rem	[pos="e,583.88,405.76 641.27,590.4 632.36,565.31 616.1,520.36 613.11,518 592.01,501.31 570.84,530.24 553.11,510 533.5,487.6 541.59,470.46 \
553.11,443 558.04,431.27 566.97,420.82 576.17,412.37"];
	}
	_shr -> _shr3	[pos="e,306.51,473.25 508.54,524.46 457.85,511.61 372.03,489.86 316.22,475.72"];
	_shr -> "_a.addr.0"	[pos="e,270.73,322.93 530.27,519.08 506.48,500.22 465.19,468.2 428.11,443 402.71,425.73 392.14,427.33 369.11,407 350.38,390.46 352.77,\
379.62 334.11,363 329.27,358.69 302.46,342.14 279.36,328.14"];
	_b -> _mul4	[pos="e,115.43,406.79 587.08,740.23 582.24,737.99 577.06,735.77 572.11,734 358.1,657.32 76.114,836.34 76.114,609 76.114,609 76.114,609 \
76.114,535 76.114,491.5 96.15,444.34 110.6,415.99"];
	_b -> _add7	[pos="e,174.58,235.89 588.05,739.94 582.98,737.59 577.46,735.41 572.11,734 466.09,706.12 178.55,746.26 80.114,698 32.357,674.59 0.11387,\
662.19 0.11387,609 0.11387,609 0.11387,609 0.11387,388 0.11387,341.34 -1.708,320.15 32.114,288 67.424,254.43 121.46,241.56 164.46,\
236.87"];
	_n -> _shr3	[pos="e,279.95,478.41 625.03,668.37 620.19,666.12 615.02,663.87 610.11,662 556.86,641.78 538.22,651.15 487.11,626 407.99,587.07 327.38,\
520.34 287.58,485.2"];
	_n -> _shr8	[pos="e,324.45,246.41 625.54,668.19 620.58,665.9 615.24,663.67 610.11,662 528.8,635.53 504.03,646.92 421.11,626 241.57,580.69 38.114,647.17 \
38.114,462 38.114,462 38.114,462 38.114,388 38.114,342.76 24.49,319.34 57.114,288 96.322,250.33 245.77,262.51 299.11,252 304.13,\
251.01 309.33,249.9 314.52,248.72"];
	_c -> _shr6	[pos="e,283.59,405.81 626.49,596.33 621.54,594.03 616.21,591.76 611.11,590 543.46,566.58 517.62,587.04 454.11,554 388.79,520.01 387.69,\
490.13 331.11,443 318.48,432.47 304.11,421.31 291.77,411.96"];
	_c -> "_c.addr.0"	[pos="e,428.65,322.79 626.03,596.36 621.2,594.11 616.03,591.86 611.11,590 557.44,569.68 523.92,598.03 487.11,554 432.37,488.51 506.68,\
438.63 467.11,363 460.11,349.62 448.46,338.05 436.94,328.96"];
	ssink_0	[bbID="BB0
(entry)",
		height=0.5,
		id=0,
		label=ssink_0,
		pos="671.11,162",
		type=supersink,
		width=1.2457];
	br_entry -> ssink_0	[pos="e,671.11,180.1 671.11,215.7 671.11,207.98 671.11,198.71 671.11,190.11"];
	_mul4 -> "_a.addr.0"	[pos="e,220.43,323.12 148.06,372.38 166.26,359.99 191.91,342.53 212.13,328.77"];
	ssink_1	[bbID="BB1
(if.then)",
		height=0.5,
		id=1,
		label=ssink_1,
		pos="111.11,306",
		type=supersink,
		width=1.2457];
	_mul4 -> ssink_1	[pos="e,114.08,324.15 122.14,370.82 120.31,360.19 117.91,346.31 115.82,334.2"];
	_shr6 -> "_c.addr.0"	[pos="e,376.69,322.89 290.52,373.01 300.85,367.47 312.57,361.05 323.11,355 337.96,346.48 354.14,336.73 367.98,328.25"];
	_shr6 -> ssink_1	[pos="e,124.68,323.49 226.52,374.37 215.85,370.49 204.07,366.39 193.11,363 179.52,358.79 174.57,361.87 162.11,355 150.91,348.83 140.31,\
339.62 131.7,330.92"];
	ssink_2	[bbID="BB2
(if.end)",
		height=0.5,
		id=2,
		label=ssink_2,
		pos="300.11,18",
		type=supersink,
		width=1.2457];
	"ret_if.end" -> ssink_2	[pos="e,300.11,36.104 300.11,71.697 300.11,63.983 300.11,54.712 300.11,46.112"];
	ssrc_0	[bbID="BB0
(entry)",
		height=0.5,
		id=0,
		label=ssrc_0,
		pos="635.11,827",
		type=supersource,
		width=1.1193];
	ssrc_0 -> _b	[pos="e,614.25,769.59 628.85,809.07 625.56,800.16 621.45,789.04 617.75,779.06"];
	ssrc_0 -> _a	[pos="e,545.01,769.08 601.92,816.71 591.73,812.87 580.9,807.72 572.11,801 563.76,794.62 556.4,785.8 550.54,777.47"];
	ssrc_0 -> _n	[pos="e,647.59,698.26 642.07,808.99 642.91,806.35 643.63,803.63 644.11,801 649.87,769.58 649.45,732.75 648.18,708.27"];
	ssrc_0 -> _c	[pos="e,660.49,624 653.04,810.73 655.74,807.74 658.24,804.45 660.11,801 682.47,759.87 677.2,744.55 682.11,698 683.79,682.09 686.72,677.32 \
682.11,662 678.93,651.39 672.85,640.94 666.64,632.16"];
	ssrc_2	[bbID="BB2
(if.end)",
		height=0.5,
		id=2,
		label=ssrc_2,
		pos="418.11,389",
		type=supersource,
		width=1.1193];
	ssrc_2 -> "_c.addr.0"	[pos="e,405.5,324.15 414.72,370.82 412.62,360.19 409.88,346.31 407.49,334.2"];
	ssrc_2 -> "_a.addr.0"	[pos="e,266.16,323.33 393.07,374.88 384.12,370.6 373.84,366.15 364.11,363 346.45,357.28 340.43,361.7 323.11,355 306.13,348.43 288.69,338.25 \
274.52,328.96"];
	ssrc_1	[bbID="BB1
(if.then)",
		height=0.5,
		id=1,
		label=ssrc_1,
		pos="262.11,536",
		type=supersource,
		width=1.1193];
	ssrc_1 -> _shr3	[pos="e,262.11,479.18 262.11,517.7 262.11,509.25 262.11,498.87 262.11,489.37"];
}
